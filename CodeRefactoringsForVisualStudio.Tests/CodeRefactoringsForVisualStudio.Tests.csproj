<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>

    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="EncapsulateFieldForWPF\Data\Class1.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\Class1_expected.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsInTheMiddle.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsInTheMiddle_expected.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsOnIdentifier.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsOnIdentifier_expected.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsOnTypeName.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsOnTypeName_expected.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenWholeFieldDeclarationIsSelected.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenWholeFieldDeclarationIsSelected_expected.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateTwoFieldsWhenTwoFieldsAreInLine.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateTwoFieldsWhenTwoFieldsAreInLine_expected.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateTwoFieldsWhenTwoFieldsAreSelected.cs" />
    <Compile Remove="EncapsulateFieldForWPF\Data\ShouldEncapsulateTwoFieldsWhenTwoFieldsAreSelected_expected.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\Class1.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\Class1_expected.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithElementAccessOnBothSides.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithElementAccessOnBothSides_expected.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithMemberAccessOnBothSides.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithMemberAccessOnBothSides_expected.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithMemberAccessOnOneSide.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithMemberAccessOnOneSide_expected.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertSelectedSingleAssignment.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertSelectedSingleAssignment_expected.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertSelectedTwoAssignments.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldInvertSelectedTwoAssignments_expected.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldPreserveLeftTrivia.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldPreserveLeftTrivia_expected.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldPreserveRightTrivia.cs" />
    <Compile Remove="InvertAssignmentDirection\Data\ShouldPreserveRightTrivia_expected.cs" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsOnTypeName.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsOnIdentifier.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsInTheMiddle.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenWholeFieldDeclarationIsSelected.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsOnTypeName_expected.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsOnIdentifier_expected.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenCursorIsInTheMiddle_expected.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateFieldWhenWholeFieldDeclarationIsSelected_expected.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateTwoFieldsWhenTwoFieldsAreSelected_expected.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateTwoFieldsWhenTwoFieldsAreSelected.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateTwoFieldsWhenTwoFieldsAreInLine.cs" />
    <EmbeddedResource Include="EncapsulateFieldForWPF\Data\ShouldEncapsulateTwoFieldsWhenTwoFieldsAreInLine_expected.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithElementAccessOnBothSides_expected.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithElementAccessOnBothSides.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithMemberAccessOnBothSides.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithMemberAccessOnBothSides_expected.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithMemberAccessOnOneSide.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertAssignmentWithMemberAccessOnOneSide_expected.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertSelectedSingleAssignment.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertSelectedSingleAssignment_expected.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertSelectedTwoAssignments.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldInvertSelectedTwoAssignments_expected.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldPreserveLeftTrivia.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldPreserveLeftTrivia_expected.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldPreserveRightTrivia.cs" />
    <EmbeddedResource Include="InvertAssignmentDirection\Data\ShouldPreserveRightTrivia_expected.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="3.3.1" />
    <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.Common" Version="3.3.1" />
    <PackageReference Include="nunit" Version="3.12.0" />
    <PackageReference Include="NUnit3TestAdapter" Version="3.15.1" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.4.0" />
    <PackageReference Include="RoslynNUnitLight.NetStandard" Version="1.2.5" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ConvertToFullWPFProperty\ConvertToFullWPFProperty.csproj" />
    <ProjectReference Include="..\EncapsulateFieldForWPF\EncapsulateFieldForWPF\EncapsulateFieldForWPF.csproj" />
    <ProjectReference Include="..\InvertAssignmentDirection\InvertAssignmentDirection\InvertAssignmentDirection.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ConvertToFullWPFProperty\Data\" />
  </ItemGroup>

</Project>